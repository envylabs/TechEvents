=form_for @event, html: { class: "form-horizontal event-form" } do |f|
  -if @event.errors.any?
    #error_explanation
      %h2 #{pluralize(@event.errors.count, "error")} prohibited this event from being saved:

    %ul
      -@event.errors.full_messages.each do |msg|
        %li=msg

  %fieldset
    .section-header
      Who's having the event?

    #select_group_panel
      .control-group
        =f.label :group_id, "Name of group", :class => "control-label"
        .controls
          =f.collection_select :group_id, @groups, :id, :name, { :prompt => "" }, { :id => "event_group", :required => "required", :"data-placeholder" => "Choose a group" }
          or
          %a.btn.btn-small#create_new_group Create a new group

    #create_group_panel.hide
      .control-group
        =label_tag :"group[name]", "Name of group", :class => "control-label"
        .controls
          =text_field_tag :"group[name]", nil, :class => "span5", :placeholder => "Orlando Ruby User Group", :id => "group_name"

    #event_details_panel
      .section-header
        What's going on?

      .control-group
        =f.label :name, "Name of event", :class => "control-label"
        .controls
          =f.text_field :name, :class => "span5", :placeholder => "Codeschool Beta", :id => "event_name", :required => "required"

      .control-group
        =f.label :description, "Description", :class => "control-label"
        .controls
          =f.text_area :description, :class => "span5", :placeholder => "Mauris iaculis porttitor posuere. Praesent id metus massa.", :id => "event_description", :rows => "5", :required => "required"

      .control-group
        =f.label :link, "Link for more info", :class => "control-label"
        .controls
          =f.text_field :link, :class => "span5", :placeholder => "http://envylabs.com/", :id => "event_link"

      .section-header
        When and where?

      .control-group
        =f.label :start_time, "Start Time", :class => "control-label"
        .controls
          =f.text_field :start_time_date, class: "datepicker", size: 10, maxlength: 10, :id => "event_start_time_date", :required => "required"
          =f.text_field :start_time_time, class: "input-small", size: 5, maxlength: 5, :id => "event_start_time_time", :required => "required"

      .control-group
        =f.label :end_time, "End Time", :class => "control-label"
        .controls
          =f.text_field :end_time_date, class: "datepicker", size: 10, maxlength: 10, :id => "event_end_time_date", :required => "required"
          =f.text_field :end_time_time, class: "input-small", size: 5, maxlength: 5, :id => "event_end_time_time", :required => "required"
          %p.help-block <strong>Note:</strong> Please enter start and end times in 24 hour format

      .control-group
        =f.label :original_address, "Address", :class => "control-label"
        .controls
          -if @event.address_tbd
            .event_original_address_container.hide
              =f.text_field :original_address, :value => @event.persisted? ? @event.address : nil, :class => "span5", :placeholder => "121 S Orange Ave, Orlando, FL", :id => "event_original_address", :required => "required"
              %br
          -else
            .event_original_address_container
              =f.text_field :original_address, :value => @event.persisted? ? @event.address : nil, :class => "span5", :placeholder => "121 S Orange Ave, Orlando, FL", :id => "event_original_address", :required => "required"
              %br

          .event_address_tbd_container
            =f.check_box :address_tbd, :id => "event_address_tbd"
            To be determined

          -if !@event.address.blank?
            %p.help-block
              %strong The current address is:
              =@event.address

      .section-header
        Anything else to add?

      .control-group
        =f.label :notes, "Notes", :class => "control-label"
        .controls
          =f.text_area :notes, :class => "span5", :placeholder => "Mauris iaculis porttitor posuere. Praesent id metus massa.", :id => "event_notes", :rows => "5"

      .section-header
        Rock and roll

      .row
        .span6
          %p Your event will be #{@event.persisted? ? "updated" : "posted"} intstantly. Showcased events found in the Orlando Tech Events newsletter, however, must be approved prior to display.

        .span2
          %input.btn.btn-primary.btn-large{:name => "commit", :type => "submit", :value => @event.persisted? ? "Update Event" : "Post Event"}

:javascript
  // On page load
  $(function() {
    // Form validation
    // SEE: https://github.com/twitter/bootstrap/issues/202
    // SEE: Edit starting on line 648 of assets/javascripts/jquery.validate.js to make help-block show up.
    $('.event-form').validate({
        errorClass:'error',
        validClass:'success',
        errorElement:'p',
        highlight: function (element, errorClass, validClass) { 
          $(element).parents("div[class='control-group']").addClass(errorClass).removeClass(validClass); 
        }, 
        unhighlight: function (element, errorClass, validClass) { 
          $(element).parents(".error").removeClass(errorClass).addClass(validClass); 
        },
        invalidHandler: function(form, validator) {
          $('input[type="submit"]').removeAttr('disabled');
          $('input[type="reset"]').removeAttr('disabled');
        }
    });

    // Misc setup
    $('#event_group').chosen().change(function() {
      fadeInEventDetails();
    });
    $('.datepicker').datepicker({format: 'yyyy-mm-dd'});

    // Aesthetics
    $('#event_details_panel').hide();

    // Address TBD checkbox
    $('#event_address_tbd').click(function() {
      if($('#event_address_tbd').is(':checked')) {
        $('.event_original_address_container').fadeOut();
        $('#event_original_address').val('');
      } else {
        $('.event_original_address_container').fadeIn();
      }
    });

    // Automatically adujst end date and time after changing start date and time
    $('#event_start_time_date').on("blur", function(e) {
      $('#event_end_time_date').val($('#event_start_time_date').val());
    });

    $('#event_start_time_time').on("keyup", function(e) {
      $('#event_end_time_time').val(Date.parse($('#event_start_time_time').val()).add(1).hours().toString('HH:mm'));
    });

    // Group creation logic
    $('#create_new_group').click(function() {
      $('#select_group_panel').slideUp();
      $('#create_group_panel').fadeIn();
      $('#group_name').attr("required", "required");
    });

    // Event group selection logic
    $('#event_group').change(function() {
      var groupLastEventUrl = "/groups/" + $('#event_group').val() + "/last_event.json";

      $.get(groupLastEventUrl, function(data) {
        console.log(data);
        // Populate form with previous event's data
        $('#event_name').val(data['name']);
        $('#event_description').val(data['description']);
        $('#event_link').val(data['link']);
        $('#event_start_time_date').val(data['start_date']);
        $('#event_start_time_time').val(data['start_time']);
        $('#event_end_time_date').val(data['end_date']);
        $('#event_end_time_time').val(data['end_time']);
        $('#event_original_address').val(data['address']);
        $('#event_notes').val(data['notes']);

        // Fade in the event details
        fadeInEventDetails();
      });
    });

    // Pretty effects
    $('#group_name').keyup(function() {
      fadeInEventDetails();
    });
  });

  // Fades in #event_details_panel, if it's already visible, flash it
  function fadeInEventDetails() {
    $details = $('#event_details_panel');
    if ( $details.is(':hidden') ) { return $details.fadeIn(1000); }
  }
